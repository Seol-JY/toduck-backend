plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.ec4j.editorconfig' version '0.0.2'
    id 'checkstyle'
    id 'jacoco'
}

group = 'im.toduck'
version = '0.0.1-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* Boot */
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.3.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.1'

    /* Lombok */
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    /* Databases */
    runtimeOnly 'com.h2database:h2:2.2.224'
    runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'

    /* Redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.1'

    /* Security */
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.1'
    testImplementation 'org.springframework.security:spring-security-test:6.2.3'

    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    /* CoolSMS */
    implementation 'net.nurigo:sdk:4.3.0'
}

tasks.named('test') {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

// editorconfig 설정
editorconfig {
    excludes = ['build', 'node_modules', '.husky', 'docker-infra']
}
check.dependsOn editorconfigCheck

// checkstyle 설정
checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/rule-config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/rule-config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
    sourceSets = [sourceSets.main]
    ignoreFailures = false
}
checkstyleMain.source = fileTree('src/main/java')

// submodule 에서 민감정보 이동
tasks.register('copyPrivate', Copy) {
    from 'toduck-backend-private'
    include "*.properties"
    into 'src/main/resources'
}
processResources.dependsOn('copyPrivate')

// Jacoco 설정
jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
    }
}
